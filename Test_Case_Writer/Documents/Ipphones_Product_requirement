### Product requirements
    # Audio only devices
        1]
    # Video capable devices
        2]
  ## Kiosk Mode experience 
     Microsoft Teams certified devices enforce kiosk mode, where the end user’s interaction with the device is limited to the Microsoft Teams user interface for all desired actions.  
        1] The operating system configuration must prevent users from accessing hardware or other touch screen options or gestures (e.g., swipe left/right, up/down) to exit the Microsoft Teams, Microsoft Company Portal, or Device Settings applications.  
        2] The operating system configuration must prevent users from exiting the Microsoft Teams, Microsoft Company Portal, or Device Settings applications by using keyboard or hard key combinations.  
        3] The operating system configuration must launch the Microsoft Teams application after power up by default and prevent access to the Android home screen.  
        4] Device must support an operating system configuration that would allow the user to navigate the phone only via the Microsoft Teams application user interface. 
        5] Device must not allow users to uninstall the Microsoft Teams application via the Android interface. 
        5] Device must not allow users to exist the Microsoft Teams application via any of the available touch screen gestures.  
  ## OOBE requirements  
       OOBE experience must meet all requirements as outlined in this section.  
       # Boot up sequence  
        Partners are responsible to ensure the following sequence and events are happening during initial boot up of the device.  
         * Boot Up screen:  
           1] Partners may display their logo on the boot up screen  
           2] Partner must ensure all Microsoft Teams needed resources are initialized, including network and IP address acquisition  
           3] Once initialization is complete, transition to next screen must happen without user intervention 
          * Language Selection screen: 
           1] Display list of supported languages (languages not supported by Microsoft Teams, see Microsoft Teams Supported Languages section below, must not be presented as an option) 
           2] Users must be allowed to select a language. 
           3} Once language selection is completed, transition to next screen must happen without user intervention. 
           4] Device must fetch local time zone before signing in 
         * Loading Teams Application screen:  
           1] he next screen must be the Loading Teams Application screen without user intervention 
       # Requirements for multiple service providers 
         * OOBE Feature 1: Single Factory Image –  multiple service providers 
         * Requirement : SHALL NOT
         * Notes : The device shipping from factory shall not contain software from other service providers than Microsoft Teams. Must comply with branding guidelines for the    Certified  for Microsoft Teams.

         * OOBE Feature 2: Single Disti orderable SKU  
         * Requirement : REQUIRED 
         * Notes : Required for mandatory Royalty tracking. 

         * OOBE Feature 3: Customer orderable Teams SKU 
         * Requirement : REQUIRED 
         * Notes : Required for mandatory Royalty tracking.

         * OOBE Feature 4: Device First-run Service picker  
         * Requirement : SHALL NOT
         * Notes : 

         * OOBE Feature 5: Account OOBE customizations 
         * Requirement : MAY
         * Notes 5: OOBE customizations should be aligned with Teams OOBE and require sign-off by Microsoft Teams. 

         * OOBE Feature 6: Teams Image –  Reset to certified defaults 
         * Requirement : REQUIRED 
         * Notes : Reset to default settings for Microsoft Teams shall not require user interaction

         * OOBE Feature 7: Teams Image –  Reset to Factory Image  
         * Requirement : MAY  
         * Notes : The Reset to Factory Image shall use methods without UX on the device. 
  ## Device encryption 
       Devices must support Android-based encryption and must populate the right status for encryption using the appropriate Android API. 
         1] Firmware must support Android-based device encryption (For Android 10 and above file-based encryption is required) File-Based Encryption  |  Android Open Source Project
         2] Firmware must populate the right status for encryption using the appropriate Android API https://developer.android.com/reference/android/app/admin/DevicePolicyManager.html#getStorageEncryptionStatus() 
         3] The encryption is enforced through Intune policy and Intune queries for getStorageEncryptionStatus() for encryption status, return values of ENCRYPTION_STATUS_PER_USER (5) is recognized as active, fully configured encryption and satisfies Intune compliance 
         4] Firmware must enable an admin to query the status of encryption.olson
  ## TLS 1.2 and Cipher suites support 
         Device must support TLS 1.2 and the Cipher Suites available at the time of certification. Partners to check with Microsoft on the most current list. 
  ##  Android Intents support 
        Device must support Android ‘intent’ inter-process communication mechanism.  Reference: https://developer.android.com/reference/android/content/Intent.html 
  ## Idle Mode requirements 
        1] For accurate presence information, the device needs to update user’s presence status to the Teams service. This will be achieved via broadcast intents that the firmware publishes to the Microsoft Teams application. 
        2] Firmware must broadcast the ACTION_DREAMING_STARTED and ACTION_DREAMING_STOPPED intents when the device goes to idle mode either based on screen saver settings, device lock settings or office hour settings. 
        3] When both the screen saver and device lock features are disabled by the user, the device must default to sending these events after a configurable idle timeout. 
        4] When both the screen saver and device lock features are enabled, the device must enter idle mode based on the idle timeout setting that starts earliest. 
  ## LED requirements 
        The Microsoft Teams application would provide updates via intents to the firmware when users interact on the touch screen interface during calls or meetings. This enables the firmware to update the available LED states on the phone. If multiple LED indicators are not available on the device to differentiate the various states listed below, the Mute state would take precedence over other states.  
        # LED Scenario 1 : Mute State: When user updates the mute state via the user interface, the Teams application will broadcast an intent. 
        # Action : com.microsoft.skype.teams.ipphone.APP_MUTE_STATE Data: MUTE_STATE, 0 or 1 Where 0 represent Mute Off and 1 represents Mute On.This data can be used to update the mute LED.
        # LED Scenario 2: MWI: When the user has a new voicemail, the application will broadcast an intent. 
        # Action : com.microsoft.skype.teams.ipphone.APP_MISSEDVOICEMAIL_STATE Data: UNREAD_VOICEMAIL, 0 or 1 Where 0 represent No Unread Voicemails and 1 represents New Voicemail Available. This data can be used to update MWI indicator.
        # LED Scenario 3: Missed Calls State: When the user has a new missed call, the application will broadcast an intent. 
        # Action : com.microsoft.skype.teams.ipphone.APP_MISSEDCALL_STATE Data: MISSED_CALLS, 0 or 1 Where 0 represent No new missed calls and 1 represents New missed calls Available. This data can be used to update MWI indicator. 
        # LED Scenario 4: Incoming Call State: When the user has a new incoming call, the application will broadcast an intent. 
        # Action : com.microsoft.skype.teams.ipphone.APP_INCOMINGCALL_STATE Data: INCOMING_CALL, 0 or 1 Where 0 represent No new incoming call and 1 represents a new incoming call.This data can be used to update MWI indicator and to play dial tone when user picks up the handset of presses speaker button. 
        # LED Scenario 5: In Call State: When the user is in a call or conference, the application will broadcast an intent.
        # Action : com.microsoft.skype.teams.ipphone.APP_INCALL_STATE Data: IN_CALL, 0 or 1 Where 0 represents call is in progress (no audio) and 1 represents a call in progress. This data can be used by partners to reset the voice channel to the speaker for the next incoming call to ring. This data can be used to update the speaker button LED.
        # LED Scenario 6:
        # Action :
        # LED Scenario 7: Voicemail Playing State: When the user is playing voicemail audio, the app will send an intent 
        # Action : com.microsoft.skype.teams.ipphone.APP_VOICEMAILPLAYING_STATE (Play/Pause button or Speed button on voicemail tab) Data: PLAYING_VOICEMAIL, 0 or 1  Where 0 represent that no voicemail audio is playing and 1 represents that the user has chosen to play the voicemail audio.  This data can be used to update the speaker button LED. 
        # LED Scenario 8: When user chooses audio output via touch screen UI during calls 
        # Action : com.microsoft.skype.teams.ipphone.partner.APP_AUDIO_STATE Data: HANDSETHOOK, 0 or 1 (similar to earpiece mode in mobile) SPEAKER, 0 or 1 HEADSETHOOK, 0 or 1 where 0 represents off and 1 represents on. 
        # LED Scenario 9: User SignIn State: When the user is signed into the Teams app, the application will broadcast an intent 
        # Action : com.microsoft.skype.teams.ipphone.APP_USER_STATE Data: SIGNED_IN, 0 or 1 Where 1 represents user is signed in, 0 represents user is signed out 

  ## Dial Tone requirements 
        Firmware is responsible for playing the dial tone when the user picks up the handset or presses the speaker button to initiate an outgoing call. This might not apply for hardware that does not have handset or speaker buttons. 
        # Firmware must play a dial tone to the user via the user’s chosen audio channel (handset, headset or speaker) when an audio channel is activated (user-initiated) and all of the of the following intents are set to 0 by the Microsoft Teams Application.  (com.microsoft.skype.teams.ipphone.APP_INCOMINGCALL_STATE is set to 0) AND (com.microsoft.skype.teams.ipphone.APP_INCALL_STATE is set to 0) AND (com.microsoft.skype.teams.ipphone.APP_VOICEMAILPLAYING_STATE is set to 0) If the speaker is the active audio channel, the Speaker LED must be ON when dial tone is playing. 
        # Firmware must stop playing a dial tone to the user via the user’s chosen audio channel (handset, headset or speaker) when one of the following states is set to 1 by the Microsoft Teams Application. (com.microsoft.skype.teams.ipphone.APP_INCOMINGCALL_STATE is set to 1) OR (com.microsoft.skype.teams.ipphone.APP_INCALL_STATE is set to 1) OR (com.microsoft.skype.teams.ipphone.APP_VOICEMAILPLAYING_STATE is set to 1) 
        # Firmware must stop playing a dial tone to the user when user starts dialing number on dial pad. Firmware must play dial tone again if the user clears phone number on dial pad. 

        ###Report firmware version
        #scenario 1: Report firmware version
        #description :Firmware version info should be set as a System Property 
        #Partner Implementation :Partner should be report this as a secure string, set as a system property with key "build.firmware.version".
        #Teams App Query : System.getProperty("build.firmware.version")

        ###Report device type
        #Scenario 1:Report Device Type
        #Description: Firmware should send the device type to Teams to optimize its client experience based on the device type
        #Partner Implementation : Partner should report this as a secure string, set as a system property with key "teams_device_type".
        #Teams App Query: Settings.Secure.getString(application.getContentResolver(), "teams_device_type")

      ###The device type should be the following value

      ipPhone - This represents Teams phone device type
      Eg: Settings.Secure.getString(application.getContentResolver(), "teams_device_type")
      Sample output:
      ipPhone
      Report device capabilities 
      Firmware must implement teams_device_capabilities and report its capabilities as appropriate. Applicable values will be released by Microsoft via the one pager release process. 
      #description: Firmware should send the device info to Teams to optimize its client experience based on the device capabilities. 
      #Partner Implementation:Partner should report, as a secure string, set as a system property with key "teams_device_capabilities" from the FW side
      Note: Multiple capabilities should be reported as a comma separate list of values
      #Teams App Query:Settings.Secure.getString(application.getContentResolver(), "teams_device_capabilities")

  ## Firmware release requirement
        Firmware package must include the BIOS compatible with the specific hardware, the DSP and supporting drivers, and the operating system configuration as defined in this document. Firmware package must also include updateable Device Settings application, Partner Agent, Microsoft Admin Agent, Microsoft Company Portal, and the Microsoft Teams application. It is the firmware package as described above that will be considered the certification firmware build and released officially for customers to download via TAC.
        # For each product release, the partner must provide 3 versions of the firmware bundle: 
          1] userdebug build: used by Microsoft Teams Engineering to develop and test new features on the specific firmware version 
          2] ‘dummy’ ADB enabled build: used by Microsoft QA teams for integration and feature testing 
          3] ADB disabled and release signed build: official build that will be released to customers, must be ‘released’ signed. Version must be higher than the ‘dummy’ build 
  ## Device management
        * Microsoft Teams certified devices are managed devices, management functions being provided via the Microsoft Teams Admin Center (TAC) solution. 
        * TAC provides tenant administrators the ability to add new certified devices into their system, update these devices to the latest firmware, push application updates to these devices in a regular and reliable fashion and allow remote management of the devices.  
        * TAC also provides tenant administrator access to phone-specific logs to debug failures scenarios including audio failures, connectivity issues, etc. 
        * The device management agent is a software application/service which resides on the target device to allow for performance of the required device management activities. Implementation requirements for the device management agent are specified in 'Partner agent requirements' of this document. 
          1] Device must support an agent running in the background to communicate and integrate with TAC.  
          2] Device must apply all firmware, application and configuration updates received from TAC via intents. 
          3] Device must retain application settings and device settings after application updates and/or firmware updates have been applied to the device. 
          4] Device must not require factory resets after receiving updates through TAC 
          5] Device may have an option to upgrade the firmware manually (via the web interface) when signed in as an administrator. 
          6] TAC provides the tenant administrator access to device-specific logs to debug failures scenarios including audio failures, connectivity issues, etc. 
          7] Device must allow Teams app to read ANR and tombstone logs for debugging purposes since the files downloaded from TAC don't contain logs from the OS.
             - Teams app should be able to read the /data/anr and /data/tombstone directories as well as be able to read the content of all trace files within the /data/anr and /data/tombstones directory.
             - Teams app will read all the files from these directories using standard Android IO APIs and attach to the log reported downloaded from TAC  
          8] Device must upload logs without revealing PII data to the TAC solution. 
          9] Device must report telemetry events to integrate reporting device status with the TAC solution.
          10] If the Microsoft Admin Agent terminates for any reason, firmware must restart the admin agent after a period of 15 minutes. The admin agent must be started as described in section 4.0 of this document. 
  ## Development and support tools
        # Android Debug Bridge (ADB) 
           1] Firmware must provide ADB utility  
           2] Partner must have the ability to provide firmware builds with ADB enabled, or disabled during certification process for engineering collaboration purposes 
           3] The certified GA build must not have ADB enabled 
        # FTP or Telnet
           1] Partners can choose to have FTP and/or Telnet ports enabled during development phase 
           2] The certified GA build must have FTP and Telnet disabled 
        # Syslog
           1] Partners can choose to have syslog enabled during development phase 
           2] The certified GA build may have syslog enabled 
  ## User Messaging requirements
        * Device must provide message during updates of any of the Teams related applications running on the device  
        * The device must provide a visual indicator when the device is offline
        * All user messages must be localized for all partner supported languages. See Microsoft Teams Supported Languages section of this document 
  ## OS level battery optimization requirements
        The OS level battery optimization must be turned OFF, regardless of whether the device uses battery or not. The operating system shouldn't start optimizing power by throttling network calls and/or reducing the thread priority of the Teams process. 
  ## Hard Button Mapping requirements 
        For devices providing hard buttons, the Microsoft Teams Phones application will provide support for hardware buttons for call handling functions not limited to Redial, Mute/Unmute, Hold/Resume and Call Transfer.  
        Any hardware button on the device must be actionable by the user. See the table below for a list of actions that are supported by the Microsoft Teams application. Partners are encouraged to collaborate with Microsoft if they anticipate adding new hardware buttons outside of this list. 
        All hardware buttons on the device should be mapped to a KeyEvent defined for Android. Events that are not supported by Android should be mapped to the permitted custom Key Codes as defined in the Table below. 
        * item 1: Volume Control 
        * Description: User can control local devices’ volume via the up and down hardware buttons 
        * KeyEvents/Intent: KEYCODE_VOLUME_UP KEYCODE_VOLUME_DOWN 

        * item 2: Mute / Unmute 
        * Description: User can mute/unmute the local device microphone. If the device supports an LED for indication of mute state, it should indicate the MUTE state.  
        * KeyEvents/Intent: KEYCODE_MUTE 

        * item 3: Standard dial pad 
        * Description: User can use buttons supported on dial pad, Phone keys 0 – 9, Phone key Star (*), Phone Key Pound (#) 
        * KeyEvents/Intent: KEYCODE_0 to KEYCODE_9 KEYCODE_STAR KEYCODE_POUND

        * item 4: ‘+’ in dial pad 
        * Description: Interpret ‘+’ from dialpad 
        * KeyEvents/Intent: LongPress on KEYCODE_0 

        * item 5: DTMF support 
        * Description: Support for standard DTMF tones  
        * KeyEvents/Intent: KEYCODE_0 to KEYCODE_9 KEYCODE_STAR KEYCODE_POUND

        * item 6: Contacts 
        * Description: User can launch Contact Search in the Microsoft Teams application by pressing the Contacts button 
        * KeyEvents/Intent: KEYCODE_CONTACTS 

        * item 7: Voice mail 
        * Description: A user can press a button to access their voicemail in the Microsoft Teams application on the device 
        * KeyEvents/Intent: KEYCODE 500 

        * item 8: Hold/Resume 
        * Description: A user can place a hold  
        * KeyEvents/Intent: KEYCODE 501 

        * item 9: Call Transfer 
        * Description: Ability to transfer a call to another user 
        * KeyEvents/Intent: KEYCODE 502 

        * item 10: Redial  
        * Description: User can redial the last called number.  
        * KeyEvents/Intent: KEYCODE 504 

        * item 11: Headset 
        * Description: User can press a button on the phone to switch the audio to a USB connected headset 
        * KeyEvents/Intent: KEYCODE 505 

        * item 12: Speaker 
        * Description: User can press a button on the phone to switch the audio to speakerphone.
        * KeyEvents/Intent: KEYCODE 506 

        * item 13: Handset 
        * Description: User can pick up the handset on the phone to switch the audio to the handset. 
        * KeyEvents/Intent: KEYCODE 507 

        * item 14: Off hook support 
        * Description: User can initiate or accept an incoming call via the Microsoft Teams application on the device and audio is expected to come to the phone handset or headset.The firmware is responsible of managing audio through multiple output channels (headset, handset, or speakerphone).
        * KeyEvents/Intent: The firmware must broadcast the intent below to inform the application about the audio channel that is currently active. 

        * item 15: Video 
        * Description: User can initiate or accept an incoming video call via the Microsoft Teams application on the device.  
        * KeyEvents/Intent: KEYCODE 508 
  ## Audio Channel requirements 
        # High level requirements 
          The user can initiate or accept an incoming call on the device through one of four options:  
          1] Pick up Handset (if applicable) 
          2] Press Speaker phone button 
          3] Headset 
          4] Touch Screen (Join/End Buttons) on the Microsoft Teams application 
          In all the cases listed above, audio is expected to play over one of the three possible output channels: Headset, Handset or Speakerphone.  Firmware is responsible for handling the audio flow through the user’s preferred channels and switching of the audio flow between these channels. For example, if the user chooses to pick up a call via the handset and transfer audio flow to the speaker phone, the firmware must route the audio channel from the handset to the speaker phone.  Firmware must play the audio via the channel chosen by the user and transfer the audio based on user behavior. If the audio channel is not switched during the call, the firmware must interpret a second action on the same hardware button press as ending the call. 
        # Audio Channel switching
          * Initail state - Audio Switching while in a call – Device Speaker  
          * Action - Speaker is selected   
          * Expected state - Speaker is lit. Soft key shows the Speaker, and the audio is flowing through the speaker. 
          * Teams App to firmware - User selects the soft speaker button -> app updates AudioManager.setSpeakerphoneOn(true)  
          * Firmware to App intent - PHONE_STATE_UPDATED intent:  Speaker =1 Headset=0 Handset=0  

          * Initail state - Audio Switching while in a call – USB Headset connected  
          * Action - Headset is selected   
          * Expected state - Headset button is lit on the device and the soft key shows headset connected.  
          * Teams App to firmware - AudioManager.setSpeakerphoneOn(false) BT_SCO is not initiated
          * Firmware to App intent - PHONE_STATE_UPDATED intent: Speaker =0  Headset=1  Handset=0  

          * Initail state - Audio Switching while in a call – BT Connected 
          * Action - BT Soft Key is selected    
          * Expected state - Soft key show BT is connected. Audio should flow from the connected BT.
          * Teams App to firmware - AudioManager.setSpeakerphoneOn(false) BT_SCO is initiated  
          * Firmware to App intent - PHONE_STATE_UPDATED intent:  Speaker =0 Headset=1 Handset=0

          * Initail state - Audio Switching while in a call - Handset  
          * Action -
          * Expected state - 
          * Teams App to firmware - Teams will not send any intent. It would show handset icon. User cannot select the icon
          * Firmware to App intent - PHONE_STATE_UPDATED intent: updated Speaker =0  Headset=0 Handset=1  
        -> note - Whenever the user chooses to switch between the hard button on the device to the soft key on the app, the audio should flow through the selected channel. And the    soft key should show the correct audio channel selected.  

        # Default Audio Channel when BT?USB Headset is connected
           * Initail state - Incoming and Outgoing call default audio channel  
          * Action - only BT is connected  
          * Expected state - The default audio channel should the connected BT.  
          * Teams App to firmware - In this case we initialize the BT_SCO connection and we call AudioManager.setSpeakerphoneOn(false) 
          * Firmware to App intent - PHONE_STATE_UPDATED intent: Headset=1; Speaker =0; Handset=0  

          * Initail state - Incoming and Outgoing call default audio channel  
          * Action - BT and USB headset both are connected  
          * Expected state - USB headset will be the default audio channel.  
          * Teams App to firmware - Incoming call: Here, if the user accepts the call on the UI the default audio channel should be the USB headset. BT_SCO is not initiated.
            Outgoing Call: 
            Here, if the user accepts the call on the UI the default audio channel should be the USB headset. 
            BT_SCO is not initiated.
            In this case we do not initialize the BT_SCO connection and we call AudioManager.setSpeakerphoneOn(false)
          * Firmware to App intent - PHONE_STATE_UPDATED intent: Headset=1 Speaker =0 Handset=0 Firmware must prioritize 

          *scenarious: Dialpad state: when dial pad state changed, will broadcast an intent
          #Action: 
            com.microsoft.skype.teams.ipphone.DIALPAD_STATE 
            Data: 
            DIALPAD_STATE, can be 0,1,2 
            0 represents no dial pad show 
            1 represents dial pad is showing with no number. 
            2 represents dial pad is showing with number. 
 
            This intent can be used to change the audio channel and play dial tone. 
            When firmware receives 1 or 2, it must activate the audio channel. Teams will not send INCALL_STATE when dial pad show. After INCALL_STATE is sent and while call is in progress firmware should not respond to Dialpad state changes. Once the call is ended firmware should send PHONE_STATE_UPDATE with all audio source 0
  ## Teams button support 
            Firmware must listen to the intents that are broadcast and update the hardware indicators based on the information listed in the table below. 
            #TeamFeature: Support Teams Button on the device 
            #Firmware Dependency :FW needs to send a new keycode when Teams App button is pressed on the device. 
            #Partner Action [Keycode/Intent]: KEYCODE_503 
## Microsoft Teams Application requirements
            ## Feature support requirements:
            Device must meet the following minimum feature requirements. 
            #Feature: Sign in
            #Minimum requirements: User must be able to sign in and sign out using their corporate account credentials
            #Feature:Presence
            #Minimum requirements
            User should be able to see their status accurately reflected on the device 
            User should be able to manually change their status 
            #feature: search
            #Minimum requirements:User should be able to search for a contact 
            #feature: call
            #Minimum requirements:User should be able to make an audio and/or video call, place an audio and/or video call on hold, mute and unmute an audio and/or video call
            1]User should be able to transfer a call
            2]User should be able to merge a call
            3]User should be able to escalate a P2P call to a conference call
            4]User should be able to call an IVR system and enter DTMF digits
            5]Device should support multiple incoming calls 
            #faeture:Meetings
            #Minimum requirements: 
            1]User should be able to view their calendar and all meetings
            2]User should be able to join and leave a meeting
            3]User should be able to delete a meeting from the calendar
            4]User should be able to see all meeting participants
            5]User should be able to add and/or admit people into an existing meeting
            #feature:Voicemail
            #Minimum requirements: 
             1]User should be able to receive, play/pause and delete voicemail
             2] User should be able to see a visual indicator when there is new voicemail
            #feature:Call Park
            #Minimum requirements: 
             1]User should be able to park and retrieve a parked call 
            #feature:Group call
            #Minimum requirements: 
             1]User able to see an incoming group call notification
             2]User able to accept, decline and/or join a group call 
            Additionally, the device must support all Microsoft Teams features available at the time the device enters certification stage. For any features that require partners to make changes to either firmware or the partner apps, partner requirements will be provided via a one pager partner requirements document ahead of time. 
            For all certified devices, partners are also required to complete all work necessary to support a new Microsoft Teams application feature as communicated during the product release engagements
 ## Application support
            The following permissions must be granted by default to all Microsoft applications:
                  1] Device admin privileges
                  2] Admin access to overlay screen 
 ## Emergency Call requirements
            Overall requirements
            1] Device must support 911 calls from the locked screen without requiring the user to unlock the device
            2] Emergency call icon / option must be available for the user, on the unlock code screen.
            3] Clicking the emergency call icon/option must trigger an action from the firmware to publish an intent to the Microsoft Teams application. Once the intent is detected by the application, Microsoft Teams launches the 911 calling experience.
            4] Intent that the partner needs to publish: 
            com.microsoft.skype.teams.ipphone.partner.DIAL_EMERGENCY_NUMBER
            5] Teams App will share emergency data (from location policy or emergency call routing policy) to firmware after registration
            #Intent: com.microsoft.skype.teams.ipphone.SHARE_EMERGENCY_INFO 
            #With Extras: String[] extra keyed with “EMERGENCY_INFO” which will contain the emergency numbers.  
            String extra keyed with “CORRELATION_ID” which will be used to uniquely identify the request 
            #The firmware will respond with intent
            #Intent: com.microsoft.skype.teams.ipphone.partner.SHARE_EMERGENCY_INFO_ACK 
            #With Extras : String extra correlationId keyed with “CORRELATION_ID” that will be equal to the correlationId of the request
            6]Firmware must confirm that they have received emergency call information.   
            7]App will periodically refresh emergency calling information.  
            8] Nothing is expected from the firmware side. Teams application will periodically share the emergency data (via the same intent as above) if it changes.  
            9] A new code change to support 911 from keypad on lock screen must be added.  
            10]Every time the user presses 911 from keypad on lock screen, firmware must send an intent to app indicating the there is an ask for an emergency call.  
            11]App must listen to the emergency dial intent from firmware and invoke dialing out 911.   
            # Firmware must have the following intent: 
            #Intent: com.microsoft.skype.teams.ipphone.partner.DIRECT_DIAL_EMERGENCY_NUMBER
            #With Extras: String extra keyed with “EMERGENCY_NUMBER” that contains the emergency number (not the mask) that was dialed.    
            e.g. user dials 911 OR 212 OR 768 OR 908 -> FW should return 911  
            10] App must support auto-dial after user hits 911 or local emergency number.  
  ## Additional requirements 
            1] Firmware must validate PIN during PIN creation and update - we cannot support a PIN that starts with local emergency numbers. 
            2] Screen should not be enforced unless the user is signed in. 
            3] In CAP mode, screensaver should be disabled by default.
            4] Device must sign out after 5 unsuccessful attempts of phone lock pin.
            5] Device must provide a warning message on the number of attempts left to unlock the phone until it signs out.
            6] On user sign out, firmware should remove all emergency call information stored. 
  ## LLDP (Link Layer Discovery Protocol) Requirements.
            # Firmware must facilitate specific use cases and technical specifications needed to support LLDP- IEEE 802.1AB to resolve the devices dynamic location.

            # To make sure the device supports the Ethernet connection and report Chassis ID and Port ID attribute from the Device-based API, the specified attributes are to be sent to “Teams Calling” to resolve the Teams device dynamic location for Emergency calling Services (e.g. 911/E911 calling)
 ## LLDP API
            a] LLDP data will be shared by the firmware with Teams app after app reboot/boot or after LLDP 
            data changes.
            The firmware will send intent with info 
            #Intent: com.microsoft.skype.teams.ipphone.partner.SHARE_LLDP_INFO
            #With Extras :
            1] Bytearray extra keyed with “CHASSIS_ID ” This value is expected to be the raw value received from the switch as is. No formatting is expected to be done in FW. Formatting will be handled in Teams app. 
            2] Int extra keyed with “CHASSIS_SUB_TYPE ”. 
            3] Bytearray extra keyed with “PORT_ID ” This value is expected to be the raw value received from the switch as is. No formatting is expected to be done in FW. Formatting will be handled in Teams app. 
            4] Int extra keyed with “PORT_SUB_TYPE”. 
            5] String extra keyed with “CORRELATION_ID” which will be used to uniquely identify the request
            b] Firmware must resend LLDP information when some/any attribute changes.
 ## LLDP E2E Flow
            LLDP attributes in TLV format are fetched from by Teams Device 3rd party platform, as specified by IEEE 802.1AB. These attributes are consumed by the platform for its own needs. Slimcore is a Teams App media component that fetches LLDP Chassis ID and Port ID attributes from the device platform based on API that is specified in this document. These attributes, along with other network attributes are sent to “Teams Calling” and used to resolve Teams device dynamic location, as shown in the diagram below.
            *ncs
            *middle teir
            *teams calink
            * sLIM core
            * Teams Phone platform
  ## Accessibility requirements 
            Partner applications deployed on the device must be compliant with accessibility requirements.
            1] Firmware must expose the settings below to support accessibility features on the device.
            2] The ability to enable/disable accessibility features should be one of the user settings under device settings. It should not be nested under other options. The accessibility setting should be disabled by default.
            # Feature: Large Text
            # Priority: Mandatory
            # Description: Provides users a UI experience with larger text size than normal
            # Feature: High Contrast Mode
            # Priority: Optional
            # Description: Provides users a Teams experience with higher contrast on the screen
            # Feature: Color Correction
            # Priority: Mandatory
            # Description: Provides users the ability to change color correction modes
            # Feature: Talkback
            # Priority: Mandatory
            # Description: As provided by Android OS
  ## Microsoft Teams supported languages 
      * Partner applications deployed on the device must be localized to any region supported by the partners. Microsoft Teams supported languages are listed for reference here:
	https://docs.microsoft.com/en-us/microsoftteams/audio-conferencing-supported-languages

      * Persistent Device ID Requirements
      On Teams devices, we have many apps which may or may not be device owner apps and require access to the actual device hardware identifiers for multiple functionalities. 
      As mentioned in this article, from Android version 6 and greater, Android removes programmatic access to the device’s local hardware identifiers like MAC address for network adapters and serial number for apps using standard Android APIs. The WifiInfo.getMacAddress() and the BluetoothAdapter.getAddress() methods now return to a constant value of 02:00:00:00:00:00. 
      Moreover, from Android 10 release, according to this, only device owner apps can access the actual device Wi-Fi MAC address. 
 ## Requirements from Partners:
      1]	All Microsoft apps (Teams, Admin Agent, and Company Portal) present on Android Teams devices must be able to read MAC addresses of all ethernet, Wi-Fi and Bluetooth adapters present on the device.
      2]	Teams, Admin Agent and Company Portal apps used on Android Teams devices must be able to read the device serial number.
      3]	Partners should disable any randomized or dummy MAC addresses and serial numbers behavior. All Microsoft apps must be able to read the real addresses and serial numbers. See this for more details: ⦁	MAC Randomization Behavior  |  Android Open Source Project
      4]	MAC addresses and serial numbers must not be reset or changed on factory reset, OS or app update, or sign out. All hardware identifiers reported must always be the same.
      5]	All Microsoft apps must be pre-granted all relevant permissions required by the OS to read the hardware identifiers.
  ## APIs used by Microsoft apps to read hardware identifiers:
      Microsoft apps leverage the following APIs to read the various device identifiers. These APIs must meet the requirements mentioned above:
      ⦁ WifiInfo.getMacAddress() 
      ⦁ NetworkInterface.getHardwareAddress() 
      ⦁ BluetoothAdapter.getAddress() 
      ⦁ Build.getSerial()
      ⦁ Build.SERIAL
  ## Permissions used by Microsoft apps to read hardware identifiers:
      Microsoft apps declare the following permissions in their AndroidManifest.xml:
      READ_PHONE_STATE, READ_PRIVILEGED_PHONE_STATE
      We also expect that in future Android OS releases, Google will continue to evolve their OS and may introduce new restrictions which can prevent Microsoft apps from reading the MAC addresses. OEMs must relax those restrictions in all supported Android OS versions and allow Microsoft apps to read MAC addresses.
  ## Partner Applications requirements
      Partner applications are Android applications that are developed and delivered by partners to users and phone administrators. These applications enable end users to customize the hardware experience of their phones and provide admins the ability to debug the phones for connectivity issues. 

      The term “partner applications” in this specification refers to the applications that are specified as mandatory in this section. The following terms and associated meaning will be used throughout this section. 

      M = Mandatory
      O = Optional
      Config Y/N = Controlled via TAC configuration settings 
  ## Partner Applications requirements
      1] Partner applications must be available for users as part of the Out-of-the-Box experience. 
      2] Partner applications must be invoked by the Microsoft Teams application and should not be accessible to the user directly via user interface or hardware buttons. 
      3] Partners must write the required Partner Settings and Admin Only applications using the minimum Android OS version specified in the latest product requirements documents.
      4] Partner applications must be updated by the Microsoft Teams Admin Center through firmware updates.
      5] Partner applications must provide a user interface to exit the application.
      6] The option for a user to exit the partner application and go back to the Microsoft Teams user interface can be via a back button or an exit button.
      7] Partner applications must use the same user interface theme as the Microsoft Teams application as defined in the following guidelines:
      8] Microsoft Teams Guidelines for Partners. pdf
      9] Partner applications must use the same languages as the Microsoft Teams application. See supported languages section
      10] Partner applications should be delivered packaged with the firmware build
      11] The partner applications should provide support for deep linking. 
      12] See https://developer.android.com/training/app-links/deep-linking.html.  This allows 13] the partner to develop a single app for Phone Settings and Admin Only and allow the Microsoft Teams application to link to specific sections as needed.
      14]//admin activity
      15] android:scheme=”msteamspartner”
      16] Android:host=”admin”
      17] //setttings activity
      18] android:scheme=”msteamspartner”
      19] android:scheme=”settings”
 ## Partner Agent requirements
      Partner must develop a partner agent to communicate with Microsoft Device Management solution as defined by the following:
	# Partner Agent Dev Design v3.pdf
 ## Partner Device Settings requirements
      Partners are required to implement a Device Settings application with two different interfaces:  
      1] End User Interface 
      2] Admin Interface – requires admin password to access advance menu options 
      There are two entries to access Device Settings application.
      3] On Sign in screen 
            # in user interface it show setting at the right top
            # once click on setting there should be a device setting option displayed
      4] under setting once sing-in
            # setting option display in hamberge once it touch
            # after the setting click it display the device setting
      The Admin Interface must be available for all modes (personal, CAP, shared) and regardless of who is logged into the device in a Hotdesking scenario (host or user). 
 ## Personal Mode/ Host User: End User interface requirements  
      1] Device Settings :Language 
      2] Feature Type : List of Supported Languages  
      3] Action : Ability for users to modify the language of the Microsoft Teams application on the device
      4] M/O: M
      5] Default : To be set based on the region SKU 
      6] Config Y/N  : y

      1] Device Settings : Time/Date Format* 
      2] Feature Type : * List of Date/Time Format options
                        * Time Zone    
      3] Action : * Ability for users to modify the time/date format displayed on the devices
                  * Ability for users to select from standard Android time zone 
      4] M/O: M
      5] Default : To be set based on the region SKU 
      6] Config Y/N  : y

      1] Device Settings : Display 
      2] Feature Type : List of Backlight / screen saver options   
      3] Action :Ability for users to adjust backlight time out and screensaver wait time value
      4] M/O: M
      5] Default : 30 mins 
      6] Config Y/N  : No 

      1] Device Settings : Phone Lock  
      2] Feature Type : * Enable/Disable toggle button 
                        * Timeout 
                        * PIN
      3] Action : *  Ability for users to enable/disable phone lock 
                  *  Ability for users to modify idle time out after which phone is locked 
                  *  When phone lock is enabled, ability for users to set a pin code - 6 digits, digits only, cannot start with emergency number of the number mask 
      4] M/O: M
      5] Default : N/A 
      6] Config Y/N  : YES

      1] Device Settings : Bluetooth* 
      2] Feature Type : * Bluetooth on/off  
                        * Scan/Discover                
      3] Action : *  Ability for users to Enable and disable the Bluetooth discovery
                  *  When Bluetooth is on, ability for users to scan/discover Bluetooth devices          
      4] M/O: M
      5] Default :Disabled 
      6] Config Y/N  : NO

      1] Device Settings : Wi-Fi*
      2] Feature Type : *Wi-Fi Enable/Disable toggle  
                        
      3] Action : *  Ability for users to Enable/Disable Wi-Fi  
                  * When Wi-Fi enabled, ability for users to select an available connection from the list and enter connection credentials            
      4] M/O: M
      5] Default :Disabled 
      6] Config Y/N  : NO

      1] Device Settings : Accessibility  
      2] Feature Type : * High Contrast Mode 
                        * Large text
                        * Color correction                
      3] Action : * Ability for users to enable/disable high contrast mode
                  * Ability for users to enable/disable large text
                  * Ability for users to select Android standard color correction options             
      4] M/O: M
      5] Default :Off
      6] Config Y/N  : NO

      1] Device Settings : Reboot 
      2] Feature Type : *Reboot Phone               
      3] Action : * Ability to reboot the phone                                
      4] M/O: M
      5] Default :N/A
      6] Config Y/N  : N/A

      1] Device Settings : About 
      2] Feature Type : *Screen to display various device info                
      3] Action : ⦁     About screen that has version information – 
                  ⦁	IP address 
                  ⦁	WLAN MAC address
                  ⦁	Device MAC address 
                  ⦁	Bluetooth MAC address 
                  ⦁	Serial Number 
                  ⦁	Firmware version
                  ⦁	Partner Agent version
                  ⦁	Company Portal version
                  ⦁	Admin Agent version 
                  ⦁	Teams Version                                 
      4] M/O: M
      5] Default :N/A
      6] Config Y/N  : NO

      1] Device Settings : Volume 
      2] Feature Type : *Volume bar                 
      3] Action :  Setting device volume                                            
      4] M/O: O
      5] Default :50% 
      6] Config Y/N  : N/A

      1] Device Settings : Admin Login 
      2] Feature Type : Provide password to  
                        login into Admin settings              
      3] Action       : Ability to login for advance menu options                            4] M/O: M
      5] Default :No Password  
      6] Config Y/N  : N/A

      NOTE: *
      Time/Date Format: Teams app currently supports only one date/time format
      Bluetooth: Partner needs to enable BLE in firmware
      WiFi: The WiFi option should be Disabled by default if the device supports physical WLAN connection
 ## Personal Mode/Host User: Admin user interface requirements  

      Partner must provide an Admin Only application. The Admin Only application must be password protected and accessed only by administrators with appropriate privileges. 
 
      The Admin Only application must have the following features: 

      1] Device Settings :Accessibility 
      2] Feature Type : * High Contrast Mode  
                        * Large Text
                        * Color correction              
      3] Action : * Ability for users to enable/disable large text
                  * Ability for users to select Android standard color correction         options                              
      4] M/O: M
      5] Default :off  
      6] Config Y/N  : no

      1] Device Settings :Accessibility 
      2] Feature Type : * High Contrast Mode  
                        * Large Text
                        * Color correction              
      3] Action : * Ability for users to enable/disable large text
                  * Ability for users to select Android standard color correction         options                              
      4] M/O: M
      5] Default :off  
      6] Config Y/N  : NO

      1] Device Settings :Reboot 
      2] Feature Type : * Reboot Phone             
      3] Action : * Ability to reboot the phone                              
      4] M/O: M
      5] Default :N/A 
      6] Config Y/N  : N/A 

      1] Device Settings :About*
      2] Feature Type : Screen to displaying various device info              
      3] Action : ⦁     About screen that has version information – 
                  ⦁	IP address 
                  ⦁	WLAN MAC address
                  ⦁	Device MAC address 
                  ⦁	Bluetooth MAC address 
                  ⦁	Serial Number 
                  ⦁	Firmware version
                  ⦁	Partner Agent version
                  ⦁	Company Portal version
                  ⦁	Admin Agent version 
                  ⦁	Teams Version                           
      4] M/O: M
      5] Default :N/A 
      6] Config Y/N  : NO

      1] Device Settings :Volume 
      2] Feature Type : *Volume bar            
      3] Action :Setting device volume                               
      4] M/O: O
      5] Default : 50% 
      6] Config Y/N  : N/A 

      1] Device Settings :Admin Login 
      2] Feature Type : Provide password to  
                        login into Admin settings             
      3] Action :Ability to login for advance menu options                                
      4] M/O: M
      5] Default : no password 
      6] Config Y/N  : N/A 

 ## Shared Mode: Conference Phone /CAP/ Hot Desking User: Admin user interface requirements  

      1] Device Settings :Language 
      2] Feature Type : List of supported Languages              
      3] Action : Ability for users to modify the language of the Microsoft Teams application on the device                      
      4] M/O: O
      5] Default :To be set based on the region SKU 
      6] Config Y/N  : Yes

      1] Device Settings :Time/Date Format*
      2] Feature Type : List of Date/Time Format options
                        Time Zone                 
      3] Action : ⦁     Ability for users to modify the time/date format displayed on the     devices                    
      4] M/O: O
      5] Default :To be set based on the region SKU 
      6] Config Y/N  : Yes

      1] Device Settings :Display
      2] Feature Type : List of Backlight / screen saver options            
      3] Action :   a]Ability for users to adjust backlight value 
                    b] Ability for users to adjust backlight DIM timeout 
                    c] Ability for users to enable/disable screensaver 
                    d] Ability for users to select screensaver type 
                    e] Ability for users to select screensaver waiting time  
                    f] Ability for users to select screensaver background                     
      4] M/O: a]m
               b] o
               c] m
               d]o
               e]m
               f]o
      5] Default : a]30min
                   b] TBI
                   C] ENABLE
                   D] N/A
                   E] 30MIN
                   F] DISABLE
      6] Config Y/N  : NO

      1] Device Settings :Phone Lock  
      2] Feature Type : A] Enable/Disable toggle button 
                        B] tIMEOUT
                        C] PIN          
      3] Action :   a]Ability for users to enable/disable phone lock 
                    b] Ability for users to modify idle time out after which phone is locked 
                    c] When phone lock is enabled, ability for users to set a pin code - 6 digits, digits only, cannot start with Emergency Number of the Number Mask                    
      4] M/O:  a]M
               b] M
               c] M       
      5] Default : a]Disabled 
                   b] 15 Minutes 
                   C] NA 
      6] Config Y/N  : YES

      1] Device Settings :Bluetooth  
      2] Feature Type : A] Bluetooth on/off 
                        B] Scan/Discover 
      3] Action :   a]Ability for users to Enable and disable the Bluetooth discovery
                    b] When Bluetooth is on, ability for users to scan/discover Bluetooth devices 
      4] M/O:  a]M
               b] M   
      5] Default : a]Disabled 
                   b]Disabled 
      6] Config Y/N  : No

      1] Device Settings :Wi-Fi* 
      2] Feature Type : A] Wi-Fi Enable/Disable toggle  
      3] Action :   a]Ability for users to Enable/Disable Wi-Fi  
                    b] When Wi-Fi enabled, ability for users to select an available connection from the list and enter connection credentials 
      4] M/O:  a]M
               b] M   
      5] Default : a]Disabled 
                   b]Disabled 
      6] Config Y/N  : No

      1] Device Settings :Network V 
      2] Feature Type : A]Network Configuration   
      3] Action :   PC Port toggle (On/Off) 
                    WAN Port Options: 
                  ⦁	IP Mode 
                  ⦁	IPv4 Type 
                  ⦁	IPv4 Static DNS toggle 
                  ⦁	Ipv6 Type 
                  ⦁	IPv6 Static DNS toggle 
                  -WiFi Port
                  -VLAN 
                  -PC Port 
                  -DHCP VLAN toggle 
                  -HTTP Port 
                  -HTTPS Status toggle 
                  -LLDP Status toggle 
                  -CDP Status toggle 
                  Proxy selection
      4] M/O:  M           
      5] Default : N/A             
      6] Config Y/N  : N/A

      1] Device Settings :Debug 
      2] Feature Type : A] Reset user settings
                        B] Reset to factory defaults     
      3] Action :   A] Ability to reset the device 
                    B] Reset firmware version and all options to factory defaults
      4] M/O:  1] M 
               2] M          
      5] Default :      1] OFF
                        2] N/A             
      6] Config Y/N  :  1] YES
                        2] N/A

      1] Device Settings :Admin Password 
      2] Feature Type : A] Set and reset admin password                    
      3] Action :   A] Ability for admin to set and reset the admin password  
      4] M/O:  1] M         
      5] Default :      1] N/A       
      6] Config Y/N  :  1] YES

      1] Device Settings :Admin Sign out 	 
      2] Feature Type :                    
      3] Action :   A] Ability for admin to sign out of admin interface 
      4] M/O:  1] M         
      5] Default :      1] N/A       
      6] Config Y/N  :  1] YES

      1] Device Settings :Teams User Sign-out  	 
      2] Feature Type :                    
      3] Action :   A] Ability for Admin to sign-out Teams app signed-in user 
      4] M/O:  1] M         
      5] Default :      1] N/A       
      6] Config Y/N  :  1] N/A

      Notes *
            Time/Date Format: Teams app currently supports only one date/time format
            Bluetooth: Partner needs to enable BLE in firmware
            WiFi: The WiFi option should be Disabled by default if the device supports physical WLAN connection




      




      
      
       







      
      

































   

      


 






            



      







          











        







    




    

